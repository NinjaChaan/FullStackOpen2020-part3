{"version":3,"sources":["components/Persons.js","components/PersonForm.js","components/Filter.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Persons","getFilteredPersons","removePerson","map","person","key","name","number","onClick","PersonForm","newName","newNumber","handlePersonForm","handleNameChange","handleNumberChange","onSubmit","value","onChange","type","Filter","filter","handleFilter","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Notification","message","className","App","useState","persons","setPersons","setNewName","setNewNumber","setFilter","notificationMessage","setNotificationMessage","notificationType","setNotificationType","useEffect","personService","addPerson","concat","createNotification","catch","error","console","log","updatePerson","personObject","window","confirm","p","setTimeout","event","target","preventDefault","find","word","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1f183c64.chunk.js","sourcesContent":["import React from 'react'\r\nconst Persons = ({ getFilteredPersons, removePerson }) => {\r\n    return (\r\n        <>\r\n            {getFilteredPersons().map((person) =>\r\n                <div key={person.name}>\r\n                    {person.name} {person.number} <button onClick={()=>removePerson(person)}>delete</button>\r\n                </div>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst PersonForm = ({newName, newNumber, handlePersonForm, handleNameChange, handleNumberChange}) => {\r\n    return (\r\n        <>\r\n        <h2>add a new</h2>\r\n        <form onSubmit={handlePersonForm}>\r\n            <div>\r\n                name: <input value={newName}\r\n                    onChange={handleNameChange}\r\n                />\r\n            </div>\r\n            <div>\r\n                number: <input value={newNumber}\r\n                    onChange={handleNumberChange}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Filter = ({ filter, handleFilter }) => {\r\n    return (\r\n        <div>\r\n            filter shown with <input value={filter}\r\n                onChange={handleFilter} />\r\n        </div>\r\n    )\r\n}\r\nexport default Filter","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = (newObject) => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {\r\n    getAll,\r\n    create,\r\n    update,\r\n    remove\r\n}","import React from 'react'\r\n\r\nconst Notification = ({ message, type }) => {\r\n    if (message === null || type === null) {\r\n        return (<></>)\r\n    }\r\n        return (\r\n            <div className={type}>\r\n                {message}\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\r\nimport Persons from './components/Persons'\r\nimport PersonForm from './components/PersonForm'\r\nimport Filter from './components/Filter'\r\nimport personService from './services/persons'\r\nimport Notification from './components/Notification'\r\n\r\nconst App = () => {\r\n    const [persons, setPersons] = useState([])\r\n    const [newName, setNewName] = useState('')\r\n    const [newNumber, setNewNumber] = useState('')\r\n    const [filter, setFilter] = useState('')\r\n    const [notificationMessage, setNotificationMessage] = useState(null)\r\n    const [notificationType, setNotificationType] = useState(null)\r\n\r\n    useEffect(() => {\r\n        personService.getAll().then(response => {\r\n            setPersons(response)\r\n        })\r\n    }, [])\r\n\r\n    const handlePersonForm = (event) => {\r\n        event.preventDefault()\r\n\r\n        const person = persons.find(p => p.name === newName)\r\n\r\n        if (person) {\r\n            updatePerson(person)\r\n        } else {\r\n            addPerson()\r\n        }\r\n    }\r\n\r\n    const addPerson = () => {\r\n        const personObject = {\r\n            name: newName,\r\n            number: newNumber\r\n        }\r\n\r\n        personService\r\n            .create(personObject)\r\n            .then(data => {\r\n                setPersons(persons.concat(data))\r\n                createNotification(`Added ${newName}`, 'success')\r\n\r\n                setNewName('')\r\n                setNewNumber('')\r\n            })\r\n            .catch(error => {\r\n                console.log(error.response)\r\n                createNotification(error.response.data.error, 'error')\r\n            })\r\n    }\r\n\r\n    const updatePerson = (person) => {\r\n        const personObject = {\r\n            name: newName,\r\n            number: newNumber\r\n        }\r\n\r\n        const confirmed = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)\r\n        if (confirmed) {\r\n            personService\r\n                .update(person.id, personObject)\r\n                .then(data => {\r\n                    setPersons(persons.map(p => (p.id === person.id)\r\n                        ? data\r\n                        : p\r\n                    ))\r\n                    createNotification(`${person.name} updated`, 'success')\r\n\r\n                    setNewName('')\r\n                    setNewNumber('')\r\n                })\r\n                .catch(error => {\r\n                    createNotification(error.response.data.error, 'error')\r\n                    setPersons(persons)\r\n                })\r\n        }\r\n    }\r\n\r\n    const removePerson = (person) => {\r\n        const confirmed = window.confirm(`Delete ${person.name} ?`)\r\n\r\n        if (confirmed) {\r\n            personService.remove(person.id).then(() => {\r\n                setPersons(persons.filter(p => p.id !== person.id))\r\n                createNotification(`${person.name} deleted`, 'success')\r\n\r\n                setNewName('')\r\n                setNewNumber('')\r\n            })\r\n                .catch(error => {\r\n                    createNotification(`Information of ${person.name} has already been removed from the server`, 'error')\r\n                    setPersons(persons.filter(p => p.id !== person.id))\r\n                })\r\n        }\r\n    }\r\n\r\n    const handleNameChange = (event) => {\r\n        setNewName(event.target.value)\r\n    }\r\n\r\n    const handleNumberChange = (event) => {\r\n        setNewNumber(event.target.value)\r\n    }\r\n\r\n    const handleFilter = (event) => {\r\n        setFilter(event.target.value)\r\n    }\r\n\r\n    const getFilteredPersons = () => {\r\n        return (\r\n            persons.filter(word => word.name.toLowerCase().includes(filter.toLowerCase()) ||\r\n                word.number.toLowerCase().includes(filter.toLowerCase()))\r\n        )\r\n    }\r\n\r\n    const createNotification = (message, type) => {\r\n        setNotificationMessage(message)\r\n        setNotificationType(type)\r\n        setTimeout(() => {\r\n            setNotificationMessage(null)\r\n            setNotificationType(null)\r\n        }, 5000)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Phonebook</h2>\r\n            <Notification message={notificationMessage} type={notificationType} />\r\n            <Filter\r\n                filter={filter}\r\n                handleFilter={handleFilter}\r\n            />\r\n            <PersonForm\r\n                newName={newName}\r\n                newNumber={newNumber}\r\n                handlePersonForm={handlePersonForm}\r\n                handleNameChange={handleNameChange}\r\n                handleNumberChange={handleNumberChange}\r\n            />\r\n            <h2>Numbers</h2>\r\n            <Persons\r\n                getFilteredPersons={getFilteredPersons}\r\n                removePerson={removePerson}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from \"./App\"\nimport './index.css'\n\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}